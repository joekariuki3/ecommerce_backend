# Django Environment Configuration
ENVIRONMENT=development  # Options: development, production, testing
SECRET_KEY=<your_secret_key>
DEBUG=<True_or_False># Only True in development
ALLOWED_HOSTS=<1st_host>,<2nd_host>,<3rd_host># comma separated list

# Database Configuration
DB_NAME=<database_name>
DB_USER=<database_user>
DB_PASSWORD=<database_user_password>
DB_HOST=<database_host>#localhost or remote(https://yourdomain.com)
DB_PORT=<database_port>

# Logging Configuration
# ===================

# Simple on/off switch for INFO level logs
# Set to 'false' to disable INFO logs (only WARNING, ERROR, CRITICAL will show)
ENABLE_INFO_LOGS=true

# Overall log level for the application
# Options: DEBUG, INFO, WARNING, ERROR, CRITICAL
LOG_LEVEL=INFO

# Specific log level for Django framework logs
# If not set, uses LOG_LEVEL value
DJANGO_LOG_LEVEL=INFO

# Specific log level for your custom app logs
# If not set, uses LOG_LEVEL value
APPS_LOG_LEVEL=INFO

# Development-specific logging options
# Set to 'true' for more detailed logs in development
DEBUG_LOGGING=false

# Testing-specific logging options
# Set to 'true' to see logs during test runs
ENABLE_TEST_LOGGING=false

# Examples of usage:
# =================
#
# To disable INFO logs completely:
# ENABLE_INFO_LOGS=false
#
# To see only errors and critical issues:
# LOG_LEVEL=ERROR
#
# To debug Django framework issues:
# DJANGO_LOG_LEVEL=DEBUG
#
# To debug your app while keeping Django quiet:
# APPS_LOG_LEVEL=DEBUG
# DJANGO_LOG_LEVEL=WARNING
#
# For verbose development debugging:
# DEBUG_LOGGING=true
# LOG_LEVEL=DEBUG