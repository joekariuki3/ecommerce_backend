services:
  db:
    image: postgres:15
    restart: always
    env_file:
      - .env
    volumes:
      - e-commerce_postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5

  web:
    image: ghcr.io/joekariuki3/ecommerce_backend:${IMAGE_TAG:-latest}
    restart: always
    env_file:
      - .env
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./nginx:/etc/nginx/sites-available
      - certbot-webroot:/var/www/certbot:rw
      - nginx-cert-volume:/etc/letsencrypt:ro
    command: >
      sh -c "
        set -e
        python manage.py migrate
        python manage.py collectstatic --noinput
        service nginx start
        gunicorn core.wsgi:application --bind 0.0.0.0:8000
      "

  certbot:
    image: certbot/certbot
    # The container will exit after completing its task
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    volumes:
      - certbot-webroot:/var/www/certbot:rw
      - nginx-cert-volume:/etc/letsencrypt:rw
    # Only run the certbot service when the domain is accessible
    depends_on:
      - web

volumes:
  e-commerce_postgres_data:
  certbot-webroot: # Used to serve challenge files
  nginx-cert-volume: # Used to store certificates
